HTTP_HEADERS = {
	'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/31.0.1650.63 Safari/537.36',
	'Referer': 'http://yify.tv/'
}

SEARCH_URL = 'http://yify.tv/?s=%s'

RE_POSTS = Regex('var posts = ({.+});')

####################################################################################################
def Search(query):

	oc = ObjectContainer(title2='Search Results')
	data = HTTP.Request(SEARCH_URL % String.Quote(query, usePlus=True), headers=HTTP_HEADERS).content
	json = RE_POSTS.search(data)

	if json:
		json_obj = JSON.ObjectFromString(json.group(1))

		for movie in json_obj['posts']:

			movie_url = movie['link']
			movie_title = movie['title']
			movie_thumb = movie['image']

			try: movie_summary = movie['post_content']
			except: movie_summary = None

			try: year = int(movie['year'])
			except: year = None

			oc.add(MovieObject(
				url = movie_url,
				title = movie_title,
				summary = movie_summary,
				thumb = Resource.ContentsOfURLWithFallback(url=movie_thumb, fallback='icon-default.jpg')
			))

	else:
		html = HTML.ElementFromString(data)

		for movie in html.xpath('//article[@class="posts3"]'):

			movie_url = movie.xpath('.//img/parent::a/@href')[0]
			movie_title = movie.xpath('.//h2/text()')[0]
			movie_thumb = movie.xpath('.//img/@src')[0]

			try: movie_summary = movie.xpath('.//h1/text()')[0].split('\n')[0].strip()
			except: movie_summary = None

			try: year = int(movie.xpath('.//h2//a/text()')[0])
			except: year = None

			oc.add(MovieObject(
				url = movie_url,
				title = movie_title,
				summary = movie_summary,
				thumb = Resource.ContentsOfURLWithFallback(url=movie_thumb, fallback='icon-default.jpg')
			))

	return oc
